// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class ValidarFuncionEnvioMensajeTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;

  @Before
  public void setUp() {
    System.setProperty("webdriver.chrome.driver","src/main/resources/chromedriver.exe");
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }

  @After
  public void tearDown() {
    driver.quit();
  }

  @Test
  public void validarFuncionEnvioMensaje() {
    // Test name: ValidarFuncionEnvioMensaje
    // Step # | name | target | value
    // 1 | open | http://automationpractice.com/index.php?controller=contact | 
    driver.get("http://automationpractice.com/index.php?controller=contact");
    // 2 | setWindowSize | 1264x701 | 
    driver.manage().window().setSize(new Dimension(1264, 701));
    // 3 | click | id=id_contact | 
    driver.findElement(By.id("id_contact")).click();
    // 4 | select | id=id_contact | label=Customer service
    {
      WebElement dropdown = driver.findElement(By.id("id_contact"));
      dropdown.findElement(By.xpath("//option[. = 'Customer service']")).click();
    }
    // 5 | click | id=id_contact | 
    driver.findElement(By.id("id_contact")).click();
    // 6 | click | id=email | 
    driver.findElement(By.id("email")).click();
    // 7 | click | name=id_order | 
    driver.findElement(By.name("id_order")).click();
    // 8 | click | name=id_order | 
    driver.findElement(By.name("id_order")).click();
    // 9 | click | id=message | 
    driver.findElement(By.id("message")).click();
    // 10 | type | id=message | Espero respuesta del reclamo nro 234
    driver.findElement(By.id("message")).sendKeys("Espero respuesta del reclamo nro 234");
    // 11 | click | css=#submitMessage > span | 
    driver.findElement(By.cssSelector("#submitMessage > span")).click();
    // 12 | assertText | css=.alert | Your message has been successfully sent to our team.
    assertThat(driver.findElement(By.cssSelector(".alert")).getText(), is("Your message has been successfully sent to our team."));
  }
}
